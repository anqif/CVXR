% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qp_solvers.R
\docType{class}
\name{HIGHS_QP-class}
\alias{HIGHS_QP-class}
\alias{HIGHS_QP}
\alias{mip_capable,HIGHS_QP-method}
\alias{status_map,HIGHS_QP-method}
\alias{name,HIGHS_QP-method}
\alias{import_solver,HIGHS_QP-method}
\alias{invert,HIGHS_QP,list,InverseData-method}
\alias{solve_via_data,HIGHS_QP-method}
\title{An interface for the HIGHS solver.}
\usage{
HIGHS_QP()

\S4method{mip_capable}{HIGHS_QP}(solver)

\S4method{status_map}{HIGHS_QP}(solver, status)

\S4method{name}{HIGHS_QP}(x)

\S4method{import_solver}{HIGHS_QP}(solver)

\S4method{invert}{HIGHS_QP,list,InverseData}(object, solution, inverse_data)

\S4method{solve_via_data}{HIGHS_QP}(
  object,
  data,
  warm_start,
  verbose,
  feastol,
  reltol,
  abstol,
  num_iter,
  solver_opts,
  solver_cache
)
}
\arguments{
\item{status}{A status code returned by the solver.}

\item{x, object, solver}{A \linkS4class{HIGHS_QP} object.}

\item{solution}{The raw solution returned by the solver.}

\item{inverse_data}{A \linkS4class{InverseData} object containing data necessary for the inversion.}

\item{data}{Data generated via an apply call.}

\item{warm_start}{A boolean of whether to warm start the solver.}

\item{verbose}{A boolean of whether to enable solver verbosity.}

\item{feastol}{The feasible tolerance on the primal and dual residual.}

\item{reltol}{The relative tolerance on the duality gap.}

\item{abstol}{The absolute tolerance on the duality gap.}

\item{num_iter}{The maximum number of iterations.}

\item{solver_opts}{A list of Solver specific options}

\item{solver_cache}{Cache for the solver.}
}
\description{
An interface for the HIGHS solver.
}
\section{Methods (by generic)}{
\itemize{
\item \code{mip_capable(HIGHS_QP)}: Can the solver handle mixed-integer programs?

\item \code{status_map(HIGHS_QP)}: Converts status returned by the HIGHS solver to its respective CVXPY status.

\item \code{name(HIGHS_QP)}: Returns the name of the solver.

\item \code{import_solver(HIGHS_QP)}: Imports the solver.

\item \code{invert(object = HIGHS_QP, solution = list, inverse_data = InverseData)}: Returns the solution to the original problem given the inverse_data.

\item \code{solve_via_data(HIGHS_QP)}: Solve a problem represented by data returned from apply.

}}
