% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/304_canonInterface.R
\name{canonInterface.get_problem_matrix}
\alias{canonInterface.get_problem_matrix}
\title{Build a sparse representation of the problem data.}
\usage{
canonInterface.get_problem_matrix(
  linOps,
  var_length,
  id_to_col,
  param_to_size,
  param_to_col,
  constr_length,
  canon_backend = NA
)
}
\arguments{
\item{linOps}{A list of R linOp trees representing an affine
expression.}

\item{var_length}{The total length of the variables.}

\item{id_to_col}{A map from variable id to column offset.}

\item{param_to_size}{A map from parameter id to parameter size.}

\item{param_to_col}{A map from parameter id to column in tensor.}

\item{constr_length}{Summed sizes of constraints input.}

\item{canon_backend}{Specifies which backend to use for
canonicalization, which can affect compilation time. Defaults to
NULL, i.e., selecting the default backend. Options are 'CPP',
'SCIPY'.}
}
\value{
A sparse (CSC) matrix with constr_length * (var_length + 1) rows and
param_size + 1 columns (where param_size is the length of the
parameter vector).
}
\description{
This routine is so named with prefix \code{canonInterface} to highlight
the only api from the canonical backend that is needed.
}
