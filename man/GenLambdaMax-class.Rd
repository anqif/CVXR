% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/076_gen_lambda_max.R
\docType{class}
\name{GenLambdaMax-class}
\alias{GenLambdaMax-class}
\alias{.GenLambdaMax}
\alias{GenLambdaMax}
\alias{to_numeric,GenLambdaMax-method}
\alias{.domain,GenLambdaMax-method}
\alias{.grad,GenLambdaMax-method}
\alias{validate_args,GenLambdaMax-method}
\alias{dim_from_args,GenLambdaMax-method}
\alias{sign_from_args,GenLambdaMax-method}
\alias{is_atom_convex,GenLambdaMax-method}
\alias{is_atom_concave,GenLambdaMax-method}
\alias{is_atom_quasiconvex,GenLambdaMax-method}
\alias{is_atom_quasiconcave,GenLambdaMax-method}
\alias{is_incr,GenLambdaMax-method}
\alias{is_decr,GenLambdaMax-method}
\title{The GenLambdaMax class.}
\usage{
GenLambdaMax(A, B)

\S4method{to_numeric}{GenLambdaMax}(object, values)

\S4method{.domain}{GenLambdaMax}(object)

\S4method{.grad}{GenLambdaMax}(object, values)

\S4method{validate_args}{GenLambdaMax}(object)

\S4method{dim_from_args}{GenLambdaMax}(object)

\S4method{sign_from_args}{GenLambdaMax}(object)

\S4method{is_atom_convex}{GenLambdaMax}(object)

\S4method{is_atom_concave}{GenLambdaMax}(object)

\S4method{is_atom_quasiconvex}{GenLambdaMax}(object)

\S4method{is_atom_quasiconcave}{GenLambdaMax}(object)

\S4method{is_incr}{GenLambdaMax}(object, idx)

\S4method{is_decr}{GenLambdaMax}(object, idx)
}
\arguments{
\item{A}{An \linkS4class{Expression} or numeric matrix.}

\item{B}{An \linkS4class{Expression} or numeric matrix.}

\item{object}{A \linkS4class{GenLambdaMax} object.}

\item{values}{A list of numeric values for the arguments}

\item{idx}{An index into the atom.}
}
\description{
This class represents the maximum generalized eigenvalue  \eqn{\lambda_{\max}(A, B)},
where \eqn{A} is a symmetric matrix and \eqn{B} is a positive semidefinite matrix.
}
\section{Methods (by generic)}{
\itemize{
\item \code{to_numeric(GenLambdaMax)}: The largest generalized eigenvalue corresponding to the matrices.

\item \code{.domain(GenLambdaMax)}: Returns constraints describing the domain of the node.

\item \code{.grad(GenLambdaMax)}: Gives the (sub/super)gradient of the atom w.r.t. each variable

\item \code{validate_args(GenLambdaMax)}: Check that the matrices are square and of the same dimension.

\item \code{dim_from_args(GenLambdaMax)}: The dimensions of the atom determined from its arguments.

\item \code{sign_from_args(GenLambdaMax)}: The (is positive, is negative) sign of the atom.

\item \code{is_atom_convex(GenLambdaMax)}: Is the atom convex?

\item \code{is_atom_concave(GenLambdaMax)}: Is the atom concave?

\item \code{is_atom_quasiconvex(GenLambdaMax)}: Is the atom quasiconvex?

\item \code{is_atom_quasiconcave(GenLambdaMax)}: Is the atom quasiconcave?

\item \code{is_incr(GenLambdaMax)}: Is the atom weakly increasing in the index?

\item \code{is_decr(GenLambdaMax)}: Is the atom weakly decreasing in the index?

}}
\section{Slots}{

\describe{
\item{\code{A}}{An \linkS4class{Expression} representing a symmetric matrix.}

\item{\code{B}}{An \linkS4class{Expression} representing a positive semidefinite matrix.}
}}

