% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/150_exponential.R
\docType{class}
\name{OpRelEntrConeQuad-class}
\alias{OpRelEntrConeQuad-class}
\alias{.OpRelEntrConeQuad}
\alias{OpRelEntrConeQuad}
\alias{get_data,OpRelEntrConeQuad-method}
\alias{as.character,OpRelEntrConeQuad-method}
\alias{size,OpRelEntrConeQuad-method}
\alias{num_cones,OpRelEntrConeQuad-method}
\alias{cone_sizes,OpRelEntrConeQuad-method}
\alias{is_dcp,OpRelEntrConeQuad-method}
\alias{is_dgp,OpRelEntrConeQuad-method}
\alias{is_dqcp,OpRelEntrConeQuad-method}
\alias{dual_value<-,OpRelEntrConeQuad-method}
\title{The OpRelEntrConeQuad class.}
\usage{
OpRelEntrConeQuad(X, Y, Z, m, k, constr_id = NA_integer_)

\S4method{get_data}{OpRelEntrConeQuad}(object)

\S4method{as.character}{OpRelEntrConeQuad}(x)

\S4method{size}{OpRelEntrConeQuad}(object)

\S4method{num_cones}{OpRelEntrConeQuad}(object)

\S4method{cone_sizes}{OpRelEntrConeQuad}(object)

\S4method{is_dcp}{OpRelEntrConeQuad}(object, dpp = FALSE)

\S4method{is_dgp}{OpRelEntrConeQuad}(object, dpp = FALSE)

\S4method{is_dqcp}{OpRelEntrConeQuad}(object)

\S4method{dual_value}{OpRelEntrConeQuad}(object) <- value
}
\arguments{
\item{X}{The variable \eqn{X} in the (approximate) operator relative entropy cone.}

\item{Y}{The variable \eqn{y} in the (approximate) operator relative entropy cone.}

\item{Z}{The variable \eqn{z} in the (approximate) operator relative entropy cone.}

\item{m}{A positive integer that controls the number of quadrature nodes used in a local approximation of the matrix logarithm. Increasing this value results in better local approximations, but does not significantly expand the region of inputs for which the approximation is effective.}

\item{k}{A positive integer that sets the number of scaling points about which the quadrature approximation is performed. Increasing this value will expand the region of inputs over which the approximation is effective.}

\item{constr_id}{(Optional) A numeric value representing the constraint ID.}

\item{value}{A numeric scalar, vector, or matrix.}
}
\description{
This class represents an approximate construction of the scalar relative entropy cone.
}
\details{
\deqn{
 K_{re}^n=\\text{cl}\\{(X,Y,T)\\in\\mathbb{H}^n_{++} \\times \\mathbb{H}^n_{++}\\times\\mathbb{H}^n_{++}\\:D_{\\text{op}}\\succeq T\\}
}

This approximation uses \eqn{m + k} semidefinite constraints.

More details on the approximation can be found in Theorem-3 on page-10 in the paper:
Semidefinite Approximations of the Matrix Logarithm.
}
\section{Methods (by generic)}{
\itemize{
\item \code{get_data(OpRelEntrConeQuad)}: Information needed to reconstruct the object aside from the args.

\item \code{size(OpRelEntrConeQuad)}: The number of entries in the combined cones.

\item \code{num_cones(OpRelEntrConeQuad)}: The number of elementwise cones.

\item \code{cone_sizes(OpRelEntrConeQuad)}: The dimensions of the exponential cones.

\item \code{is_dcp(OpRelEntrConeQuad)}: An exponential constraint is DCP if each argument is affine.

\item \code{is_dgp(OpRelEntrConeQuad)}: Is the constraint DGP?

\item \code{is_dqcp(OpRelEntrConeQuad)}: Is the constraint DQCP?

\item \code{dual_value(OpRelEntrConeQuad) <- value}: Replaces the dual values of an exponential cone constraint.

}}
\section{Slots}{

\describe{
\item{\code{X}}{The variable \eqn{X} in the (approximate) operator relative entropy cone.}

\item{\code{Y}}{The variable \eqn{Y} in the (approximate) operator relative entropy cone.}

\item{\code{Z}}{The variable \eqn{Z} in the (approximate) operator relative entropy cone.}

\item{\code{m}}{A positive integer that controls the number of quadrature nodes used in a local approximation of the matrix logarithm. Increasing this value results in better local approximations, but does not significantly expand the region of inputs for which the approximation is effective.}

\item{\code{k}}{A positive integer that sets the number of scaling points about which the quadrature approximation is performed. Increasing this value will expand the region of inputs over which the approximation is effective.}
}}

