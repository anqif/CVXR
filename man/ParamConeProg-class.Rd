% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/230_cone_matrix_stuffing.R
\docType{class}
\name{ParamConeProg-class}
\alias{ParamConeProg-class}
\alias{ParamConeProg}
\alias{is_mixed_integer,ParamConeProg-method}
\alias{apply_parameters,ParamConeProg-method}
\alias{apply_param_jac,ParamConeProg-method}
\alias{split_solution,ParamConeProg-method}
\alias{split_adjoint,ParamConeProg-method}
\title{Parametrized Cone Program}
\usage{
\S4method{is_mixed_integer}{ParamConeProg}(object)

\S4method{apply_parameters}{ParamConeProg}(
  object,
  id_to_param_value = NULL,
  zero_offset = FALSE,
  keep_zeros = FALSE,
  quad_obj = FALSE
)

\S4method{apply_param_jac}{ParamConeProg}(object, delc, delA, delb, active_params = NULL)

\S4method{split_solution}{ParamConeProg}(object, sltn, active_vars = NULL)

\S4method{split_adjoint}{ParamConeProg}(object, del_vars = NULL)
}
\arguments{
\item{object}{A \linkS4class{ParamConeProg} object.}

\item{id_to_param_value:}{(optional) dict mapping parameter ids to values.}

\item{zero_offset:}{(optional) if True, zero out the constant offset in the parameter vector.}

\item{keep_zeros:}{(optional) if True, store explicit zeros in A where parameters are affected.}

\item{quad_obj:}{(optional) if True, include quadratic objective term.}
}
\description{
minimize   c'x  + d + \link{(1/2)x'Px}
subject to cone_constr1(A_1\emph{x + b_1, ...)
...
cone_constrK(A_i}x + b_i, ...)
}
\details{
The constant offsets d and b are the last column of c and A.
}
\section{Methods (by generic)}{
\itemize{
\item \code{is_mixed_integer(ParamConeProg)}: Is the problem mixed-integer?

\item \code{apply_parameters(ParamConeProg)}: Returns A, b after applying parameters (and reshaping)

\item \code{apply_param_jac(ParamConeProg)}: Multiplies by Jacobian of parameter mapping. Assumes delA is sparse. Returns a mapping of param id to dparam.

\item \code{split_solution(ParamConeProg)}: Splits the solution into individual variables.

\item \code{split_adjoint(ParamConeProg)}: Adjoint of split solution.

}}
