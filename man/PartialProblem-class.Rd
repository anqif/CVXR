% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/146_partial_problem.R
\docType{class}
\name{PartialProblem-class}
\alias{PartialProblem-class}
\alias{.PartialProblem}
\alias{PartialProblem}
\alias{get_data,PartialProblem-method}
\alias{is_constant,PartialProblem-method}
\alias{is_convex,PartialProblem-method}
\alias{is_concave,PartialProblem-method}
\alias{is_dpp,PartialProblem-method}
\alias{is_log_log_convex,PartialProblem-method}
\alias{is_log_log_concave,PartialProblem-method}
\alias{is_nonneg,PartialProblem-method}
\alias{is_nonpos,PartialProblem-method}
\alias{is_imag,PartialProblem-method}
\alias{is_complex,PartialProblem-method}
\alias{dim,PartialProblem-method}
\alias{variables,PartialProblem-method}
\alias{parameters,PartialProblem-method}
\alias{constants,PartialProblem-method}
\alias{grad,PartialProblem-method}
\alias{domain,PartialProblem-method}
\alias{value,PartialProblem-method}
\alias{canonicalize,PartialProblem-method}
\title{A Partial Optimization Problem}
\usage{
\S4method{get_data}{PartialProblem}(object)

\S4method{is_constant}{PartialProblem}(object)

\S4method{is_convex}{PartialProblem}(object)

\S4method{is_concave}{PartialProblem}(object)

\S4method{is_dpp}{PartialProblem}(object, context = c("dcp", "dgp"))

\S4method{is_log_log_convex}{PartialProblem}(object)

\S4method{is_log_log_concave}{PartialProblem}(object)

\S4method{is_nonneg}{PartialProblem}(object)

\S4method{is_nonpos}{PartialProblem}(object)

\S4method{is_imag}{PartialProblem}(object)

\S4method{is_complex}{PartialProblem}(object)

\S4method{dim}{PartialProblem}(x)

\S4method{variables}{PartialProblem}(object)

\S4method{parameters}{PartialProblem}(object)

\S4method{constants}{PartialProblem}(object)

\S4method{grad}{PartialProblem}(object)

\S4method{domain}{PartialProblem}(object)

\S4method{value}{PartialProblem}(object)

\S4method{canonicalize}{PartialProblem}(object)
}
\description{
A Partial Optimization Problem
}
\section{Methods (by generic)}{
\itemize{
\item \code{get_data(PartialProblem)}: Returns info needed to reconstruct the expression besides the args.

\item \code{is_constant(PartialProblem)}: Is the expression constant?

\item \code{is_convex(PartialProblem)}: Is the expression convex?

\item \code{is_concave(PartialProblem)}: Is the expression concave?

\item \code{is_dpp(PartialProblem)}: Is the expression a disciplined parameterized expression?

\item \code{is_log_log_convex(PartialProblem)}: Is the expression log-log convex?

\item \code{is_log_log_concave(PartialProblem)}: Is the expression log-log concave?

\item \code{is_nonneg(PartialProblem)}: Is the expression nonnegative?

\item \code{is_nonpos(PartialProblem)}: Is the expression nonpositive?

\item \code{is_imag(PartialProblem)}: Is the expression imaginary?

\item \code{is_complex(PartialProblem)}: Is the expression complex valued?

\item \code{dim(PartialProblem)}: Returns the (row, col) dimensions of the expression.

\item \code{variables(PartialProblem)}: Returns the variables in the problem.

\item \code{parameters(PartialProblem)}: Returns the parameters in the problem.

\item \code{constants(PartialProblem)}: Returns the constants in the problem.

\item \code{grad(PartialProblem)}: Gives the (sub/super)gradient of the expression wrt each variable. Matrix expressions are vectorized, so the gradient is a matrix. NA indicates variable values unknown or outside domain.

\item \code{domain(PartialProblem)}: A list of constraints describing the closure of the region where the expression is finite.

\item \code{value(PartialProblem)}: Returns the numeric value of the expression.

\item \code{canonicalize(PartialProblem)}: Returns the graph implementation of the object. Chain ids of all the opt_vars.

}}
\section{Slots}{

\describe{
\item{\code{opt_vars}}{The variables to optimize over.}

\item{\code{dont_opt_vars}}{The variables to not optimize over.}
}}

