% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qp2quad_form.R
\docType{class}
\name{ParamQuadProg-class}
\alias{ParamQuadProg-class}
\alias{.ParamQuadProg}
\alias{is_mixed_integer,ParamQuadProg-method}
\alias{apply_parameters,ParamQuadProg-method}
\title{The ParamQuadProg class.}
\usage{
\S4method{is_mixed_integer}{ParamQuadProg}(object)

\S4method{apply_parameters}{ParamQuadProg}(
  object,
  id_to_param_value = NULL,
  zero_offset = FALSE,
  keep_zeros = FALSE
)
}
\arguments{
\item{object}{A \linkS4class{ParamQuadProg} object.}

\item{id_to_param_value}{(Optional) List mapping paramter ids to values.}

\item{zero_offset}{(Optional) If TRUE, zero out the constant offset in the parameter vector.}

\item{keep_zeros}{(Optional) If TRUE, store explicit zeros in A where parameters are affected.}
}
\description{
This class represents a parametrized quadratic program.
}
\details{
minimize   x^T*P*x + q^T*x + d
subject to (in)equality_constr(A_1*x + b_1, ...)
           ...
           (in)equality_constr(A_i*x + b_i, ...)

The constant offsets d and b are the last column of c and A, respectively.
}
\section{Methods (by generic)}{
\itemize{
\item \code{is_mixed_integer(ParamQuadProg)}: Is the problem mixed-integer?

\item \code{apply_parameters(ParamQuadProg)}: Returns A, b after applying parameters (and reshaping).

}}
