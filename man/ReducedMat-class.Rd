% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reductions.R
\docType{class}
\name{ReducedMat-class}
\alias{ReducedMat-class}
\alias{ReducedMat}
\alias{cache,ReducedMat-method}
\alias{get_matrix_from_tensor,ReducedMat-method}
\title{The ReducedMat class.}
\usage{
\S4method{cache}{ReducedMat}(object, keep_zeros = FALSE)

\S4method{get_matrix_from_tensor}{ReducedMat}(object, param_vec, with_offset = TRUE)
}
\arguments{
\item{keep_zeros}{(Optional) If TRUE, store explicit zeros in A where parameters are affected.}

\item{param_vec}{Flattened parameter vector}

\item{with_offset}{(Optional) A logical value indicating whether to return offset. Defaults to TRUE.}
}
\description{
This is a utility class for condensing the mapping from parameters to problem data.
}
\details{
For maximum efficiency of representation and application, the mapping from
parameters to problem data must be condensed. It begins as a CSC sparse matrix
matrix_data, such that multiplying by a parameter vector gives the problem data.
The row index array and column pointer array are saved as problem_data_index,
and a CSR matrix reduced_mat that when multiplied by a parameter vector gives
the values array. The ReducedMat class caches the condensed representation
and provides a method for multiplying by a parameter vector.

This class consolidates code from ParamConeProg and ParamQuadProg.
}
\section{Methods (by generic)}{
\itemize{
\item \code{cache(ReducedMat)}: Cache computed attributes if not present.

\item \code{get_matrix_from_tensor(ReducedMat)}: Wraps get_matrix_from_tensor in canonInterface

}}
