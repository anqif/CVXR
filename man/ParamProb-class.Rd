% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/144_param_prob.R
\docType{class}
\name{ParamProb-class}
\alias{ParamProb-class}
\alias{ParamProb}
\alias{is_mixed_integer,ParamProb-method}
\alias{apply_parameters,ParamProb-method}
\title{The ParamProb class.}
\usage{
\S4method{is_mixed_integer}{ParamProb}(object)

\S4method{apply_parameters}{ParamProb}(
  object,
  id_to_param_value = NULL,
  zero_offset = FALSE,
  keep_zeros = FALSE
)
}
\arguments{
\item{object}{A \linkS4class{ParamProb} object.}

\item{id_to_param_value}{(Optional) List mapping parameter IDs to values.}

\item{zero_offset}{(Optional) If TRUE, zero out the constant offset in the parameter vector.}

\item{keep_zeros}{(Optional) If TRUE, store explicit zeros in A where parameters are affected.}
}
\description{
This virtual class represents parametrized problems.
}
\details{
Parameterized problems are produced during the first canonicalization
and allow canonicalization to be short-circuited for future solves.
}
\section{Methods (by generic)}{
\itemize{
\item \code{is_mixed_integer(ParamProb)}: Is the problem mixed-integer?

\item \code{apply_parameters(ParamProb)}: Returns A, b after applying parameters (and reshaping).

}}
